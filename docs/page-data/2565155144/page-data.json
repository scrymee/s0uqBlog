{"componentChunkName":"component---src-templates-blog-post-js","path":"/2565155144/","result":{"data":{"site":{"siteMetadata":{"title":"s0uq's Blog"}},"markdownRemark":{"id":"1f04f851-9298-52f4-84d8-6b4ec5f21887","excerpt":"…","html":"<p>最近設計書を最近書くことが多い。たた同じ設計書というテーマを切り取っても、情報が過不足なく書かれて分かりやすいものと、過不足が多く分かりにくい内容となっているものがある。</p>\n<p>設計へ関わるにつれ、良い設計書・悪い設計書を感覚的に判断できるようになってきた。そうやって玉石混交の設計書を見たものの、書き手としてその経験をうまく活かせていないと感じる。</p>\n<p>良いなと思った設計書の要素について言語化してみる。体系的にまとめられている文献もあるはずなので、そっちも近々読んでいきたい部分ではある。</p>\n<p>自分の経験が、既存システムの改修ベースであるため、その前提に立った目線となる。ゼロベースからのシステム構築はまた考慮ポイントも変わりそう。</p>\n<h2>概要</h2>\n<p>より業務・要望に違いステークホルダーへ向けて書く項目。なぜやるか、どの機能をやるか…といった部分を書く。</p>\n<h3>目的</h3>\n<p>設計書の機能導入に至った経緯。影響範囲の調査にも役立つ部分となる。具体的に言い切るのも必要だが、言い過ぎない。システムを導入して顧客満足度を高める。みたいな表現は、何にでも当てはまるため避けたい。</p>\n<h3>前提条件</h3>\n<p>上手い設計者は前提条件の設定が上手い気がする。対顧客にとっては期待値のズレを減らせるし、対開発メンバーにとっては、影響範囲・考慮部分を明示的に伝えられる。</p>\n<p>自分の性格的に、よくここを覆されるとどうしようと悩んでしまうが、キリがないので考えない。</p>\n<p>ただ、システム的に改修が容易と想定できる部分において前提は切らない。（例えば商品マスタに保存されている情報を出す出さないの表示など）</p>\n<h3>追加機能</h3>\n<p>設計書の実装をすることで、ステークホルダーは何を実現できるのかを書いている。例えば、「会員情報の変更機能」だと以下のイメージ。</p>\n<ul>\n<li>パスワードを除く会員の各種情報を変更できる</li>\n<li>メールアドレスが変更された時、変更前・変更後のメールアドレスそれぞれで変更メールを受信できる</li>\n</ul>\n<h3>対応範囲</h3>\n<p>機能ベースで対応範囲を書く。既存機能の改修か新規機能の追加か。またそれぞれの機能に対してカスタマイズ概要を箇条書きで書く。</p>\n<p>個人的な感覚として8割くらいは既存機能の改修が入る気がする。もし存在しているのであれば、関連する設計書の導線もあると良い。</p>\n<h2>基本設計</h2>\n<h3>アクセス制御</h3>\n<p>アクセス権限や導線表示条件などを書く。\n上手い人は、上に見出しを書きそれぞれ項目を書き出していることが多い。これは設計書全体で統一されている。</p>\n<p>▼イメージ</p>\n<table>\n<thead>\n<tr>\n<th>項目</th>\n<th>値</th>\n<th>備考</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>ログイン</td>\n<td>ログイン済のみ</td>\n<td>ログインユーザーは規約には同意済みの前提</td>\n</tr>\n</tbody>\n</table>\n<p>設計書が上手い人からレビューを受けた時に言われたのが、「書き方にポリシーを持つ」だった。表・レイアウト・線といった部分に自分の矜持を持っていると、読み手としても見やすいし、なによりかっこいい。</p>\n<p>また正規化目的で、別のシートを参照する場合、以下の記述で参照している。</p>\n<blockquote>\n<p>【1．画面設計書】> 【入力条件】参照</p>\n</blockquote>\n<h3>表示項目</h3>\n<p>どのテーブルの何のカラムからデータを表示するかを書く。ここは様々な意見があるのを承知だが、表示項目の各種内容に対してSQLライクな抽出条件が書かれている方が個人的にわかりやすいと感じた。</p>\n<p>ただ、お客様提示資料にどこまで載せるかといった部分は案件によってよりけりだと思う。</p>\n<h3>入力項目・制御</h3>\n<p>機能単位でユーザーに入力されうる項目についての制御情報。何をどう言う形式で受け入れるかといった内容を書く。</p>\n<p>ユーザーが自由に入力・編集できる項目は、SQLインジェクションなどがあり危険なため、制御も明示的に書かれておる。「半角英数字のみ」などがよくある。</p>\n<p>後述の画面設計図と組み合わせて書かれていることも多いイメージ。</p>\n<h3>画面設計図</h3>\n<p>画面レイアウトや入出力項目の画面イメージに該当するもので、どこに何が配置されるかや、それぞれの要素の名称・アクション名・備考等を書く。図式することが多い。設計者の腕の見せ所でもある。</p>\n<h4>画面遷移図</h4>\n<p>画面上でアクションを実行した場合の遷移先を示す。正常系だけでなく、エラー時の遷移も行う。画面設計図に合わせて描かれることも多い。</p>\n<h2>参考</h2>\n<p><a href=\"https://xtech.nikkei.com/it/article/COLUMN/20090108/322455/\">画面の構造は物理的・論理的に示す</a>\n<a href=\"https://www.ipa.go.jp/archive/files/000004517.pdf\">機能要件の合意形成ガイド</a></p>","frontmatter":{"title":"設計書に必要な要素","date":"October 03, 2024","description":"最近設計書を最近書くことが多い。たた同じ設計書というテーマを..."}},"previous":{"fields":{"slug":"/2554691194/"},"frontmatter":{"title":"知らない事への恐怖に向き合う"}},"next":{"fields":{"slug":"/2568435653/"},"frontmatter":{"title":"自分のGitの運用方法"}}},"pageContext":{"id":"1f04f851-9298-52f4-84d8-6b4ec5f21887","previousPostId":"35ba064c-9549-5c1f-919f-85af3b2f6585","nextPostId":"8399bd96-4a60-5d7a-b5cb-bf13f259c66e"}},"staticQueryHashes":["2841359383","3257411868"],"slicesMap":{}}